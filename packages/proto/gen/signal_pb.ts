// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file signal.proto (syntax proto2)
/* eslint-disable */

import type { Message } from "@bufbuild/protobuf";
import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";

/**
 * Describes the file signal.proto.
 */
export const file_signal: GenFile =
	/*@__PURE__*/
	fileDesc(
		"CgxzaWduYWwucHJvdG8iYQoNU2lnbmFsTWVzc2FnZRISCgpyYXRjaGV0S2V5GAEgASgMEg8KB2NvdW50ZXIYAiABKA0SFwoPcHJldmlvdXNDb3VudGVyGAMgASgNEhIKCmNpcGhlcnRleHQYBCABKAwijgEKE1ByZUtleVNpZ25hbE1lc3NhZ2USFgoOcmVnaXN0cmF0aW9uSWQYBSABKA0SEAoIcHJlS2V5SWQYASABKA0SFgoOc2lnbmVkUHJlS2V5SWQYBiABKA0SDwoHYmFzZUtleRgCIAEoDBITCgtpZGVudGl0eUtleRgDIAEoDBIPCgdtZXNzYWdlGAQgASgM",
	);

/**
 * Signal Protocol Messages (Analogous to WhisperMessage)
 *
 * @generated from message SignalMessage
 */
export type SignalMessage = Message<"SignalMessage"> & {
	/**
	 * Corresponds to ephemeralKey
	 *
	 * @generated from field: optional bytes ratchetKey = 1;
	 */
	ratchetKey: Uint8Array;

	/**
	 * @generated from field: optional uint32 counter = 2;
	 */
	counter: number;

	/**
	 * @generated from field: optional uint32 previousCounter = 3;
	 */
	previousCounter: number;

	/**
	 * This will contain the *actual* encrypted inner WA message (e.g., waE2E.Message)
	 *
	 * @generated from field: optional bytes ciphertext = 4;
	 */
	ciphertext: Uint8Array;
};

/**
 * Describes the message SignalMessage.
 * Use `create(SignalMessageSchema)` to create a new message.
 */
export const SignalMessageSchema: GenMessage<SignalMessage> =
	/*@__PURE__*/
	messageDesc(file_signal, 0);

/**
 * Signal Protocol PreKey Message (Analogous to PreKeyWhisperMessage)
 *
 * @generated from message PreKeySignalMessage
 */
export type PreKeySignalMessage = Message<"PreKeySignalMessage"> & {
	/**
	 * Sender's registration ID
	 *
	 * @generated from field: optional uint32 registrationId = 5;
	 */
	registrationId: number;

	/**
	 * ID of the pre-key used by the sender
	 *
	 * @generated from field: optional uint32 preKeyId = 1;
	 */
	preKeyId: number;

	/**
	 * ID of the signed pre-key used
	 *
	 * @generated from field: optional uint32 signedPreKeyId = 6;
	 */
	signedPreKeyId: number;

	/**
	 * Sender's ephemeral key for this session setup
	 *
	 * @generated from field: optional bytes baseKey = 2;
	 */
	baseKey: Uint8Array;

	/**
	 * Sender's long-term identity key
	 *
	 * @generated from field: optional bytes identityKey = 3;
	 */
	identityKey: Uint8Array;

	/**
	 * The encrypted SignalMessage (containing the actual ciphertext)
	 *
	 * @generated from field: optional bytes message = 4;
	 */
	message: Uint8Array;
};

/**
 * Describes the message PreKeySignalMessage.
 * Use `create(PreKeySignalMessageSchema)` to create a new message.
 */
export const PreKeySignalMessageSchema: GenMessage<PreKeySignalMessage> =
	/*@__PURE__*/
	messageDesc(file_signal, 1);
